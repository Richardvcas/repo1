import os
import shutil
import requests
import git
from .templates import VM_YAML_TEMPLATE

GIT_USERNAME = "V849212"
GIT_PASSWORD = "DigitalWorld@2025"
#GIT_REPO_URL = f"https://{GIT_USERNAME}:{GIT_PASSWORD}@gitlab.lab.jpmchase.net/V849212/vm-auto.git"
GIT_REPO_URL = f"https://gitlab.lab.jpmchase.net/V849212/vm-auto.git"



LOCAL_YAML_FOLDER = r"C:\Users\V849212\Documents\vm_api_project\data"

def render_vm_yaml(user_input):
    return VM_YAML_TEMPLATE.format(
        vm_name=user_input["vm_name"],
        namespace=user_input["namespace"],
        volume_name=user_input["volume_name"],
        image_url=user_input["image_url"],
        storage_size=user_input["storage_size"],  
        status=user_input["status"],      
        cpu=user_input["cpu"],
        memory=user_input["memory"], 
        diskname=user_input["diskname"],      
        interface=user_input["interface"],
        ip=user_input["ip"] ,
        cloud_user=user_input["cloud_user"],
        cloud_password=user_input["cloud_password"]
    )

def save_yaml_to_file(content, filename):
    
    full_path = os.path.join(LOCAL_YAML_FOLDER, filename)
    with open(full_path, "w") as f:
        f.write(content)
    return full_path

def push_yaml_to_git(yaml_file_path,namespace):
    import git
    import os
    import shutil

    repo_dir = r"C:\Users\V849212\Documents\vm_api_project\repo_clonenew"
    
    file_name = os.path.basename(yaml_file_path)
    
    if namespace == "gkp" :
        manifests_dir = "gkp"
    elif namespace == "gos" :
        manifests_dir = "gos"
    else :
        manifests_dir = "manifests"    

    os.environ['GIT_SSL_NO_VERIFY'] = 'true'

    
    if not os.path.exists(repo_dir):
        repo = git.Repo.clone_from(GIT_REPO_URL, repo_dir, branch="main")
    else:
        repo = git.Repo(repo_dir)
        origin = repo.remotes.origin
        origin.fetch()
        repo.git.checkout('main')
        repo.git.reset('--hard', 'origin/main')

    
    dest_path = os.path.join(repo_dir, manifests_dir, file_name)
    os.makedirs(os.path.dirname(dest_path), exist_ok=True)

    
    shutil.copyfile(yaml_file_path, dest_path)

    
    repo.index.add([dest_path])
    repo.index.commit(f"Automated commit: {file_name}")
    repo.remote(name="origin").push()


def remove_yaml_from_git(yaml_file_path):
    import os
    import shutil
    import git

    repo_dir = r"C:\Users\V849212\Documents\vm_api_project\repo_clonenew"
    manifests_dir = "manifests"
    file_name = os.path.basename(yaml_file_path)

    os.environ['GIT_SSL_NO_VERIFY'] = 'true'

    
    if not os.path.exists(repo_dir):
        repo = git.Repo.clone_from(GIT_REPO_URL, repo_dir, branch="main")
    else:
        repo = git.Repo(repo_dir)
        origin = repo.remotes.origin
        origin.fetch()
        repo.git.checkout('main')
        repo.git.reset('--hard', 'origin/main')

    
    dest_path = os.path.join(repo_dir, manifests_dir, file_name)

    
    if os.path.exists(dest_path):
        repo.index.remove([dest_path], working_tree=True)
        repo.index.commit(f"Removed {file_name} from Git repo")
        repo.remote(name='origin').push()
    else:
        raise FileNotFoundError(f"{file_name} not found in repo under manifests/")

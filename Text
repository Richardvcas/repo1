https://netid-dev.jpmchase.net/netid/v1.1/reservation?subnet=168.134.50.0


Implemented Use Cases (API Endpoints)
Each operation is implemented as a standalone API endpoint with end-to-end GitOps automation.

üü¢ 1. Pave ‚Äì Provision a New VM
Endpoint: POST /api/vm-request

Accepts VM parameters: name, namespace, CPU, memory, disk size, image URL, cloud user credentials, IP address, and interface.

Uses Jinja-style YAML templates to populate VM definition dynamically.

Includes cloud-init for bootstrapping (user, password, runcmd entries).

Generates associated:

VirtualMachine object

DataVolume (PVC) with image URL

Secret for cloud-init

Saves the YAML into the local data/ folder.

Pushes the file to the correct subfolder in repo_clonenew/ (e.g., gkp/, gos/).

GitLab commit auto-triggers Argo CD sync.

VM is created in OpenShift Virtualization with correct resources and cloud-init.

Validation: Confirm VM status via Argo CD panel and OpenShift console.

üü° 2. Resize ‚Äì Adjust CPU/Memory
Endpoint: POST /api/vm-resize

Input accepts: VM name, namespace, updated CPU and memory values.

Reads and modifies the existing VM YAML.

Generates a Job YAML that:

Executes oc patch to stop the VM

Waits for 15 seconds

Executes oc patch to start the VM with updated spec

Job is:

Annotated as PostSync hook for Argo CD

Auto-deleted upon success

Ensures changes are applied cleanly without manual intervention.

Commits both the updated VM YAML and the job YAML to GitLab.

Argo CD syncs the changes and executes the Job automatically.

Validation: Check updated resources and Job success logs in OpenShift.

üîÅ 3. Repave ‚Äì Update VM Image
Endpoint: POST /api/vm-repave

Accepts new image_url, volume name, and VM name.

Locates and updates:

DataVolume image URL

Root disk reference in volumes

Useful for:

Rebuilding the VM with a newer OS image

Replacing a corrupted or misconfigured image

Reuses the existing VM metadata and structure.

GitLab commit triggers Argo CD to redeploy VM with updated image.

Optionally combined with resize or additional Job to trigger restart.

Validation: Confirm new image pulled and VM boots correctly.

üóëÔ∏è 4. Delete ‚Äì Remove VM
Endpoint: POST /api/vm-delete

Input: VM name and namespace

Locates the YAML file in the GitLab repo based on naming convention.

Executes a git rm (cached) to remove the file from staging.

Pushes commit to GitLab.

Argo CD recognizes the deleted manifest and removes the corresponding VM from OpenShift.

Safe and declarative deletion ‚Äî no manual oc delete needed.

Helps enforce GitOps hygiene and prevents resource drift.

Validation: Check GitLab history and Argo CD sync events for VM removal.

